// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Drive.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "../Commands/oi_HDrive.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
Drive::Drive() : Subsystem("Drive") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	leftFront = RobotMap::driveLeftFront;
	leftRear = RobotMap::driveLeftRear;
	rightFront = RobotMap::driveRightFront;
	rightRear = RobotMap::driveRightRear;
	drivetrain = RobotMap::driveDrivetrain;
	strafe = RobotMap::driveStrafe;
	gyro = RobotMap::drivegyro;
	leftEncoder = RobotMap::driveLeftEncoder;
	rightEncoder = RobotMap::driveRightEncoder;
	hdriveEncoder = RobotMap::driveHdriveEncoder;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Drive::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new oi_HDrive());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void HDrive(double moveValue, double turnValue, double slideValue){
	Drive().drivetrain->ArcadeDrive(moveValue, turnValue);
	Drive().strafe->Set(slideValue);
}
void hDrive(double moveValue, double turnValue, double slideValue){
	HDrive(moveValue, turnValue, slideValue);
	//strafeFix(moveValue, slideValue);
}
void strafeFix(double moveValue,double slideValue){
	double heading;
	heading = Drive().gyro->GetAngle();
	if(heading > 0){
		HDrive(moveValue, -heading*0.65,slideValue);
	}else if(heading < 0){
		HDrive(moveValue, heading*0.65, slideValue);
	}
}
/*void Stop(){
	HDrive(0,0,0);
}*/
// Put methods for controlling this subsystem
// here. Call these from Commands.

